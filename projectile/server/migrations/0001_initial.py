# Generated by Django 5.2.1 on 2025-05-21 12:04

import autoslug.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('permission', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('server_uid', models.CharField(db_index=True, max_length=36)),
                ('position', models.FloatField(db_index=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('owner_uid', models.CharField(db_index=True, max_length=36)),
                ('is_deleted', models.BooleanField(default=False, help_text='has server been soft deleted by owner?')),
                ('description', models.TextField()),
                ('member_limit', models.BigIntegerField(default=1000000, help_text='how many users can join this server?')),
                ('server_data', models.JSONField(blank=True, default=dict)),
                ('channel_data', models.JSONField(blank=True, default=dict)),
                ('icon_url', models.TextField(blank=True, default='')),
                ('banner_url', models.TextField(blank=True, default='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('server_uid', models.CharField(db_index=True, max_length=36)),
                ('color', models.CharField(blank=True, default='#FFFFFF', max_length=7)),
                ('position', models.FloatField(db_index=True)),
                ('icon_url', models.TextField(blank=True, default='')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='server.server')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('server_uid', models.CharField(db_index=True, max_length=36)),
                ('category_uid', models.CharField(db_index=True, max_length=36)),
                ('type', models.CharField(choices=[('text', 'Text'), ('voice', 'Voice')], default='text', max_length=20)),
                ('member_limit', models.BigIntegerField(default=1000000, help_text='how many users can join this channel?')),
                ('position', models.FloatField(db_index=True)),
                ('is_private', models.BooleanField(default=False, help_text='is the channel private?')),
                ('slow_mode', models.IntegerField(default=0, help_text='how many seconds should pass between messages?')),
                ('bit_rate', models.IntegerField(blank=True, help_text='Used for voice channels', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='server.category')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='server.server')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='category',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='server.server'),
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('server_uid', models.CharField(db_index=True, max_length=36)),
                ('channel_uid', models.CharField(db_index=True, max_length=36)),
                ('position', models.FloatField(db_index=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('auto_archive_duration', models.IntegerField(default=30, help_text='stays active for 30 days by default')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='server.category')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='server.channel')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='server.server')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('role_uid', models.CharField(db_index=True, max_length=36)),
                ('permission_uid', models.CharField(db_index=True, max_length=36)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='server.role')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('role', 'permission'), name='unique_role_permission')],
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.AddConstraint(
            model_name='role',
            constraint=models.UniqueConstraint(fields=('server', 'name'), name='unique_server_role'),
        ),
        migrations.AddConstraint(
            model_name='channel',
            constraint=models.UniqueConstraint(fields=('category', 'name'), name='unique_category_channel'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('server', 'name'), name='unique_server_category'),
        ),
        migrations.AddConstraint(
            model_name='thread',
            constraint=models.UniqueConstraint(fields=('channel', 'name'), name='unique_channel_thread'),
        ),
    ]
